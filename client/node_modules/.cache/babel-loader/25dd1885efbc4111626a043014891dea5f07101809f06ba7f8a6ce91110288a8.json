{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\fullstack-react-nodejs-travel-web\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport DataTable from \"react-data-table-component\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: \"Title\",\n  selector: row => row.title\n}, {\n  name: \"Year\",\n  selector: row => row.year\n}];\nconst data = [{\n  id: 1,\n  title: \"Beetlejuice\",\n  year: \"1988\"\n}, {\n  id: 2,\n  title: \"Ghostbusters\",\n  year: \"1984\"\n}];\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const fetchUsers = async page => {\n    setLoading(true);\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`);\n    setData(response.data.data);\n    setTotalRows(response.data.total);\n    setLoading(false);\n  };\n  const handlePageChange = page => {\n    fetchUsers(page);\n  };\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setLoading(true);\n    const response = await axios.get(`https://reqres.in/api/users?page=${page}&per_page=${newPerPage}&delay=1`);\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchUsers(1); // fetch page 1 of users\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Users\",\n    columns: columns,\n    data: data,\n    progressPending: loading,\n    pagination: true,\n    paginationServer: true,\n    paginationTotalRows: totalRows,\n    onChangeRowsPerPage: handlePerRowsChange,\n    onChangePage: handlePageChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"t5+4X5Fnynawu1SpZmX3gmjaxHA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","DataTable","useEffect","useState","axios","columns","name","selector","row","title","year","data","id","App","setData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","fetchUsers","page","response","get","total","handlePageChange","handlePerRowsChange","newPerPage"],"sources":["C:/xampp/htdocs/fullstack-react-nodejs-travel-web/client/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport DataTable from \"react-data-table-component\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst columns = [\n    {\n        name: \"Title\",\n        selector: (row) => row.title,\n    },\n    {\n        name: \"Year\",\n        selector: (row) => row.year,\n    },\n];\n\nconst data = [\n    {\n        id: 1,\n        title: \"Beetlejuice\",\n        year: \"1988\",\n    },\n    {\n        id: 2,\n        title: \"Ghostbusters\",\n        year: \"1984\",\n    },\n];\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [totalRows, setTotalRows] = useState(0);\n    const [perPage, setPerPage] = useState(10);\n\n    const fetchUsers = async (page) => {\n        setLoading(true);\n\n        const response = await axios.get(\n            `https://reqres.in/api/users?page=${page}&per_page=${perPage}&delay=1`\n        );\n\n        setData(response.data.data);\n        setTotalRows(response.data.total);\n        setLoading(false);\n    };\n\n    const handlePageChange = (page) => {\n        fetchUsers(page);\n    };\n\n    const handlePerRowsChange = async (newPerPage, page) => {\n        setLoading(true);\n\n        const response = await axios.get(\n            `https://reqres.in/api/users?page=${page}&per_page=${newPerPage}&delay=1`\n        );\n\n        setData(response.data.data);\n        setPerPage(newPerPage);\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        fetchUsers(1); // fetch page 1 of users\n    }, []);\n\n    return (\n        <DataTable\n            title=\"Users\"\n            columns={columns}\n            data={data}\n            progressPending={loading}\n            pagination\n            paginationServer\n            paginationTotalRows={totalRows}\n            onChangeRowsPerPage={handlePerRowsChange}\n            onChangePage={handlePageChange}\n        />\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,GAAG,CACZ;EACIC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC;AAC3B,CAAC,EACD;EACIH,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACE;AAC3B,CAAC,CACJ;AAED,MAAMC,IAAI,GAAG,CACT;EACIC,EAAE,EAAE,CAAC;EACLH,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE;AACV,CAAC,EACD;EACIE,EAAE,EAAE,CAAC;EACLH,KAAK,EAAE,cAAc;EACrBC,IAAI,EAAE;AACV,CAAC,CACJ;AAED,SAASG,GAAG,GAAG;EAAA;EACX,MAAM,CAACF,IAAI,EAAEG,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,UAAU,GAAG,MAAOC,IAAI,IAAK;IAC/BN,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAC3B,oCAAmCF,IAAK,aAAYH,OAAQ,UAAS,CACzE;IAEDL,OAAO,CAACS,QAAQ,CAACZ,IAAI,CAACA,IAAI,CAAC;IAC3BO,YAAY,CAACK,QAAQ,CAACZ,IAAI,CAACc,KAAK,CAAC;IACjCT,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMU,gBAAgB,GAAIJ,IAAI,IAAK;IAC/BD,UAAU,CAACC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,mBAAmB,GAAG,OAAOC,UAAU,EAAEN,IAAI,KAAK;IACpDN,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAC3B,oCAAmCF,IAAK,aAAYM,UAAW,UAAS,CAC5E;IAEDd,OAAO,CAACS,QAAQ,CAACZ,IAAI,CAACA,IAAI,CAAC;IAC3BS,UAAU,CAACQ,UAAU,CAAC;IACtBZ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZmB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,SAAS;IACN,KAAK,EAAC,OAAO;IACb,OAAO,EAAEhB,OAAQ;IACjB,IAAI,EAAEM,IAAK;IACX,eAAe,EAAEI,OAAQ;IACzB,UAAU;IACV,gBAAgB;IAChB,mBAAmB,EAAEE,SAAU;IAC/B,mBAAmB,EAAEU,mBAAoB;IACzC,YAAY,EAAED;EAAiB;IAAA;IAAA;IAAA;EAAA,QACjC;AAEV;AAAC,GAnDQb,GAAG;AAAA,KAAHA,GAAG;AAqDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}